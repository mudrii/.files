# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 10

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
#bindsym $mod+Return exec i3-sensible-terminal 
bindsym $mod+Return exec alacritty

# kill focused window
#bindsym $mod+Shift+q kill
bindsym $mod+q kill

# start dmenu (a program launcher)
bindsym $mod+Shift+d exec dmenu_run
#bindsym $mod+d exec dmenu_run

# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# start rofi (dmenu mode)
#bindsym $mod+d exec i3-dmenu-desktop --dmenu='rofi -dmenu -i -lines 10 -eh 1 -width 50 -padding 50 -opacity "85" -font "Droid Sans 16"'
bindsym $mod+d exec rofi -lines 12 -padding 18 -width 60 -location 0 -show drun -sidebar-mode -columns 3 -font 'Droid Sans 14'

# start rofi (window mode)
bindsym $mod+Tab exec rofi -show window -show-icons -i -lines 10 -eh 1 -width 50 -padding 50 -opacity "85" -font "Droid Sans 16"

# rofi networkmanager_dmenu
bindsym $mod+n exec networkmanager_dmenu

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child
bindsym $mod+z focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 1 px or 1 ppt
        bindsym k resize grow height 1 px or 1 ppt
        bindsym l resize shrink height 1 px or 1 ppt
        bindsym semicolon resize grow width 1 px or 1 ppt

        # same bindings, but for the arrow keys
        #bindsym Left resize shrink width 10 px or 10 ppt
        #bindsym Down resize grow height 10 px or 10 ppt
        #bindsym Up resize shrink height 10 px or 10 ppt
        #bindsym Right resize grow width 10 px or 10 ppt
        bindsym Left resize grow width 5 px or 5 ppt
        bindsym Right resize shrink width 5 px or 5 ppt 
        bindsym Down resize shrink height 5 px or 5 ppt 
        bindsym Up resize grow height 5 px or 5 ppt 

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
#bar {
#        position top
#        status_command i3status
#        status_command i3status-rs ~/.config/i3status-rs/config.toml
#        status_command i3blocks
#}

bar {
    font pango:DejaVu Sans Mono, FontAwesome 10
    position top
    status_command i3status-rs ~/.config/i3status-rs/config.toml
    colors {
        separator #666666
        background #222222
        statusline #dddddd
        focused_workspace #0088CC #0088CC #ffffff
        active_workspace #333333 #333333 #ffffff
        inactive_workspace #333333 #333333 #888888
        urgent_workspace #2f343a #900000 #ffffff
    }
}

## Manual management of external displays
# Set the shortcuts and what they do
set $mode_display Ext Screen (d) DP0 ON, (f) DP1 ON, (e) eDP ON, (h) HDMI ON, (x) DP0 OFF, (y) DP1 OFF, (w) eDP OFF, (z) HDMI OFF
mode "$mode_display" {
    bindsym d exec --no-startup-id xrandr --output DP-0 --primary --auto, mode "default"
	bindsym f exec --no-startup-id xrandr --output DP-1 --primary --auto, mode "default"
	bindsym e exec --no-startup-id xrandr --output eDP-1-1 --auto, mode "default"
	bindsym h exec --no-startup-id xrandr --output HDMI-0 --auto, mode "default"
	bindsym x exec --no-startup-id xrandr --output DP-0 --off, mode "default"
	bindsym y exec --no-startup-id xrandr --output DP-1 --off, mode "default"
	bindsym w exec --no-startup-id xrandr --output eDP-1-1 --off, mode "default"
    bindsym z exec --no-startup-id xrandr --output HDMI-0 --off, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
# Declare here the shortcut to bring the display selection menu
bindsym $mod+m mode "$mode_display"

# i3 gaps
gaps inner 5
gaps outer 5

# Smart gaps (gaps used if only more than one container on the workspace)
#smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace) 
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
#smart_borders on

# Mouse, please stop focus whenever you hover to whatever windows plz :(
focus_follows_mouse no

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# floating dialogs
for_window [window_role="pop-up"] floating enable
for_window [window_role="task_dialog"] floating enable

# key bind for Alsa sound
bindsym XF86AudioRaiseVolume exec amixer -q sset Master 5%+ unmute
bindsym XF86AudioLowerVolume  exec amixer -q sset Master 5%- unmute
bindsym XF86AudioMute exec amixer -q sset Master toggle
bindsym XF86AudioMicMute exec amixer -q sset Capture toggle

bindsym $mod+= exec amixer -q sset Master 5%+ unmute
bindsym $mod+- exec amixer -q sset Master 5%- unmute

# key bind monitor brightness
bindsym XF86MonBrightnessUp exec xbacklight -inc 5 # increase screen brightness
bindsym XF86MonBrightnessDown exec xbacklight -dec 5 # decrease screen brightness

bindsym $mod+x [urgent=latest] focus

# num lock activated
exec_always --no-startup-id numlockx on
#exec_always --no-startup-id conky

# Assign application to start on a specific workspace xprop
assign [class=Firefox] 1
assign [class=Chromium] 3
assign [class=Slack] 5
assign [class="^zoom$"] 5
assign [class=riot-desktop] 5
assign [class="^eddie-ui$"] 5
assign [class="^sublime_text$"] 6
assign [class="^Code$"] 2
assign [class="^vlc$"] 6
assign [class="^spotify$"] 10
# fix for spotify not moving to workspace 10
for_window [class="spotify"] move to workspace 10

# for_window [title="Preferences$"] floating enable
# for_window [class="(?i)mplayer"] floating enable
#for_window [class="^Slack$"] floating enable
#assign [class="^Firefox$"] 1

for_window [class=URxvt|Firefox|Chromium|vlc|Slack|zoom|Riot] focus
for_window [class=zoom|Slack|Riot|arandr|psensor|pavucontrol|nvidia-settings] floating enable

# exec --no-startup-id i3-msg 'workspace 3; exec slack; exec zoom; exec i3-sensible-terminal'

#exec --no-startup-id xautolock -time 10 -locker 'i3lock -d -c 000000'
#exec_always --no-startup-id xautolock -time 15 -locker 'i3lock -d -c 000000' -detectsleep
exec_always --no-startup-id xautolock -time 15 -locker 'i3lock-fancy -gpf Comic-Sans-MS' -detectsleep

bindsym $mod+p exec --no-startup-id $Locker, mode "default"

#set $Locker i3lock && sleep 1
#set $Locker i3lock -d -c 000000 && sleep 1
set $Locker i3lock-fancy -gpf Comic-Sans-MS && sleep 1

set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id $Locker, mode "default"
    bindsym e exec --no-startup-id i3-msg exit, mode "default"
    bindsym s exec --no-startup-id $Locker && systemctl suspend, mode "default"
    bindsym h exec --no-startup-id $Locker && systemctl hibernate, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode "default"  

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+Print mode "$mode_system"

# custom keybinds
#i3-save-tree --workspace 3 > ~/.config/i3/workspace_3.json
#tail -n +2 ~/.config/i3/workspace_3.json | fgrep -v '// splitv' | sed 's|//||g' > ~/.config/i3/workspace_3.1.json

bindsym $mod+Ctrl+1 exec ~/.config/i3/start_w1.sh
bindsym $mod+Ctrl+2 exec ~/.config/i3/start_w2.sh
bindsym $mod+Ctrl+3 exec ~/.config/i3/start_w3.sh
bindsym $mod+Ctrl+4 exec ~/.config/i3/start_w4.sh
bindsym $mod+Ctrl+5 exec ~/.config/i3/start_w5.sh
bindsym $mod+Ctrl+6 exec ~/.config/i3/start_w6.sh

bindsym $mod+Ctrl+f exec --no-startup-id firefox
bindsym $mod+Ctrl+v exec --no-startup-id vlc
bindsym $mod+Ctrl+c exec --no-startup-id chromium
bindsym $mod+Ctrl+r exec --no-startup-id urxvt -e ranger

bindsym $mod+Ctrl+Delete exec $Locker, mode "default"

# take a screenshot of a screen region and copy it to a clipboard
#bindsym --release Shift+Print exec "maim -s /home/mudrii/Images/$(date +%s).png"
bindsym --release Shift+Print exec "escrotum -s '/home/mudrii/Images/%Y-%m-%d-%H-%M-%S.png'"

# take a screenshot of a whole window
#bindsym --release Print exec "maim /home/mudrii/Images/$(date +%s).png"
bindsym --release Print exec "escrotum '/home/mudrii/Images/%Y-%m-%d-%H-%M-%S.png'"

# take a screenshot of a whole window and copy it to a clipboard
bindsym --release Ctrl+Print exec "escrotum -C "
